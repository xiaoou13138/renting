<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mvc="http://www.springframework.org/schema/mvc" 
   xsi:schemaLocation="
   http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
   http://www.springframework.org/schema/mvc 
   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:component-scan base-package="org.springframework.samples.petclinic.web" />
	<context:component-scan base-package="com.ncu.*" >
		<!-- <context:include-filter type="regex" expression=".action.*"/>  -->
	</context:component-scan>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/renting" />
        <property name="username" value="oulc" />
        <property name="password" value="123456" />
        <property name="filters" value="wall" />
        <property name="initialSize" value="2" />
        <property name="minIdle" value="2" />
        <property name="maxActive" value="200" />
        <property name="maxWait" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="select 1 from dual" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="100" />
	</bean> 
	
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hiberante.format_sql">true</prop>
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.connection.autocommit">true</prop>
                <prop key="hibernate.connection.username">oulc</prop>  
                <prop key="hibernate.connection.password">123456</prop>
            </props>
        </property>
        <!-- 扫描hibernate的注解 -->
        <property name="packagesToScan" value="com.ncu.table.bean" />
    </bean>
    
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	  
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
  		<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 使用annotation定义事务 -->

    <tx:annotation-driven transaction-manager="transactionManager"
    proxy-target-class="true" />
    
    <bean id="HibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
  		<property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    
    <!-- 静态资源的引入 -->
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/images/**" location="/images/"/> 
    <mvc:resources mapping="/showImage/**" location="http://localhost:9090/renting/showImage"/> 
    <mvc:annotation-driven />
</beans>